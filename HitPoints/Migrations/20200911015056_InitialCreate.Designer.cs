// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HitPoints.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200911015056_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HitPoints.Models.CharacterClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassLevel")
                        .HasColumnType("int");

                    b.Property<int>("HitDiceValue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PlayerCharacterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCharacterId");

                    b.ToTable("CharacterClass");
                });

            modelBuilder.Entity("HitPoints.Models.Damage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsMagic")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Damage");
                });

            modelBuilder.Entity("HitPoints.Models.Defense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DamageType")
                        .HasColumnType("int");

                    b.Property<int>("DefenseType")
                        .HasColumnType("int");

                    b.Property<long?>("PlayerCharacterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCharacterId");

                    b.ToTable("Defense");
                });

            modelBuilder.Entity("HitPoints.Models.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ModifierId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PlayerCharacterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ModifierId");

                    b.HasIndex("PlayerCharacterId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("HitPoints.Models.Modifier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AffectedObject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AffectedValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Modifier");
                });

            modelBuilder.Entity("HitPoints.Models.PlayerCharacter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlayerCharacter");
                });

            modelBuilder.Entity("HitPoints.Models.CharacterClass", b =>
                {
                    b.HasOne("HitPoints.Models.PlayerCharacter", null)
                        .WithMany("Classes")
                        .HasForeignKey("PlayerCharacterId");
                });

            modelBuilder.Entity("HitPoints.Models.Defense", b =>
                {
                    b.HasOne("HitPoints.Models.PlayerCharacter", null)
                        .WithMany("Defenses")
                        .HasForeignKey("PlayerCharacterId");
                });

            modelBuilder.Entity("HitPoints.Models.Item", b =>
                {
                    b.HasOne("HitPoints.Models.Modifier", "Modifier")
                        .WithMany()
                        .HasForeignKey("ModifierId");

                    b.HasOne("HitPoints.Models.PlayerCharacter", null)
                        .WithMany("Items")
                        .HasForeignKey("PlayerCharacterId");
                });
#pragma warning restore 612, 618
        }
    }
}
